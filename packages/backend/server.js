const express = require("express");
const cors = require("cors");
const app = express();
app.use(cors());
const port = 3000;
const { createMainWallet } = require("./utils/createMainWallet");
const { generateTempAddresses } = require("./utils/generateTempAddresses");
const { signTransaction } = require("./utils/signTx");
const {
  balanceChecker_nonce,
  balanceChecker_address,
} = require("./utils/balanceChecker");
const swaggerJsDoc = require("swagger-jsdoc");
const swaggerUi = require("swagger-ui-express");
const bodyParser = require("body-parser");
const swaggerOptions = {
  swaggerDefinition: {
    openapi: "3.0.0",
    info: {
      title: "Express API for Stealh Address",
      version: "1.0.0",
      description: "Express API with autogenerated swagger doc",
    },
  },
  apis: ["./routes/*.js"], // files containing annotations as per Swagger
};

const swaggerDocs = swaggerJsDoc(swaggerOptions);

app.use(bodyParser.json());

app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(swaggerDocs));

app.post("/createMainWallet", (req, res) => {
  createMainWallet().then((wallet) => {
    res.send(wallet);
  });
});

app.post("/generateTempAddress", (req, res) => {
  console.log(req.body);
  generateTempAddresses(req.body.nonce, req.body.mnemonic).then((addresses) => {
    res.send(addresses);
  });
});

app.post("/send-eth", (req, res) => {
  const tx = signTransaction(
    req.body.mnemonic,
    req.body.to,
    req.body.amount,
    req.body.nonce
  );
  res.send(tx);
});

app.post("/take-balances-with-nonce", (req, res) => {
  balanceChecker_nonce(req.body.mnemonic, req.body.nonce).then((output) => {
    res.send(output);
  });
});

app.post("/take-balances-with-address", (req, res) => {
  balanceChecker_address(req.body.mnemonic, req.body.nonce).then((output) => {
    res.send(Array.from(output));
  });
});

app.listen(port, () => {
  console.log(`Server started at http://localhost:${port}`);
});
